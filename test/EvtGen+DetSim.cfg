process EVTGENDETSIM  = {

   ## setup useful services
   include "Validation/GlobalHits/test/data/Random.cfi"
   include "Validation/GlobalHits/test/data/MessageLogger.cfi"
   //include "FWCore/MessageLogger/data/MessageLogger.cfi"
   //include "Validation/GlobalHits/test/data/Timing.cfi"   
   //include "Validation/GlobalHits/test/data/Memory.cfi"      

   ## Step 1 : Event Generation
   ##
   include "SimGeneral/HepPDTESSource/data/pdt.cfi"
   //include "SimGeneral/HepPDTESSource/data/pythiapdt.cfi"
   ## choose one of the following
   //include "Validation/GlobalHits/test/data/FlatRandomEGunSource.cfi"
   include "IOMC/GeneratorInterface/data/PythiaSourceMinBias.cfi"	
   replace PythiaSource.maxEvents = 5
   replace PythiaSource.pythiaHepMCVerbosity = false
   replace PythiaSource.pythiaPylistVerbosity = 0

   ## smearing of the vertex
   ##
   ##module VtxSmeared
   include "IOMC/EventVertexGenerators/data/VtxSmearedGauss.cfi" 
   ##include "IOMC/EventVertexGenerators/data/VtxSmearedFlat.cfi"

   ## Geometry
   ##
   ## can't use official yet as it is configuration.xml rather than 
   ## SimConfiguration (how to change?)
   include "Geometry/CMSCommonData/data/cmsSimIdealGeometryXML.cfi"
   es_module = TrackerGeometricDetESModule {}
		
   ## Magnetic Field
   ##
   include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"
		
   ## Step 2 : CMS Detector Simulation
   ##
   ## CMS Det.Simulation module (OscarProducer)
   ##
   ##module g4SimHits
   include "SimG4Core/Application/data/SimG4Object.cfi" 

   ## mixing module to include pile-up in event
   ##
   #3module mix
   //include "Validation/GlobalHits/test/data/MixingModule.cfi" 

   ## Step 3 : Output module
   ##
   module o1 = PoolOutputModule 
   { 
      untracked string fileName = "evtgen_detsim.root"
   }

   ## Step 5: execute path
   ## Global producer needs DetSim, 
   ## can use smeared vertex, can't use mixing
   ##
   path p1 = { VtxSmeared, g4SimHits }
   endpath outpath = { o1 }
	
}
