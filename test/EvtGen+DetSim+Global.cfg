process PROD  = {

   # Step 1 : Event Generation
   #
   # choose one of the following
   include "Validation/GlobalHits/test/data/FlatRandomEGunSource.cfi"
   #include "Validation/GlobalHits/test/data/PythiaSource.cfi"

   # smearing of the vertex (seems to have problems as of 0_5_0 with 
   # empty |phi|<0.5 and boosted events)
   #
   #include "Validation/GlobalHits/test/data/VertexSmearing.cfi" #module VtxSmeared

   # Geometry
   #
   # can't use official yet as it is configuration.xml rather than 
   # SimConfiguration (how to change?)
   #include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"
   #es_module = TrackerGeometricDetESModule {}
   include "Validation/GlobalHits/test/data/IdealGeometrySim.cfi"
		
   # Magnetic Field
   #
   include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"
		
   # Step 2 : CMS Detector Simulation
   #
   # CMS Det.Simulation module (OscarProducer)
   #
   include "Validation/GlobalHits/test/data/OscarProducer.cfi" #module SimG4Object

   # mixing module to include pile-up in event
   #
   #include "Validation/GlobalHits/test/data/MixingModule.cfi" #module mix

   # Step 3 : Accumulation of globally transformed data
   #
   include "Validation/GlobalHits/test/data/GlobalProducer.cfi" #module gvp

   # Step 4 : Output module
   #
   module o1 = PoolOutputModule 
   { 
      untracked string fileName = "GlobalValProducer.root" 
   }
   
   # Step 5: execute path
   # Global producer needs DetSim, 
   # can use smeared vertex, can't use mixing
   #
   #path p1 = { VtxSmeared, SimG4Object, gvp }
   path p1 = { SimG4Object, gvp }
   endpath outpath = { o1 }
		
}