process PRODGLOB = {

   # setup useful services
   include "Validation/GlobalHits/test/data/Random.cfi"
   include "Validation/GlobalHits/test/data/MessageLogger.cfi"
   #include "FWCore/MessageLogger/data/MessageLogger.cfi"
   #include "Validation/GlobalHits/test/data/Timing.cfi"   
   #include "Validation/GlobalHits/test/data/Memory.cfi"      

   # Step 1 : Event Generation
   #
   # choose one of the following
   #include "Validation/GlobalHits/test/data/FlatRandomEGunSource.cfi"
   #include "Validation/GlobalHits/test/data/PythiaSource.cfi"
   include "Validation/GlobalHits/test/data/RefPoolSource.cfi"

   # Geometry
   #
   # can't use official yet as it is configuration.xml rather than 
   # SimConfiguration (how to change?)
   include "Geometry/CMSCommonData/data/cmsSimIdealGeometryXML.cfi"
   es_module = TrackerGeometricDetESModule {}
		
   # Magnetic Field
   #
   include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"
		
   # Step 2 : CMS Detector Simulation
   #
   # CMS Det.Simulation module (OscarProducer)
   #
   #module SimG4Object
   include "SimG4Core/Application/data/SimG4Object.cfi" 

   # mixing module to include pile-up in event
   #
   #module mix
   #include "Validation/GlobalHits/test/data/MixingModule.cfi" 

   # Step 3 : Accumulation of globally transformed data
   #
   #module gvp
   include "Validation/GlobalHits/test/data/GlobalProducer.cfi"

   # Step 4 : Output module
   #
   module o1 = PoolOutputModule 
   { 
      untracked string fileName = "GlobalValProducer.root"
      untracked vstring outputCommands = 
      {
        "keep *_gvp_*_*"
      }
   }

   # Step 5: execute path
   # Global producer needs DetSim, 
   # can use smeared vertex, can't use mixing
   #
   path p1 = { SimG4Object, gvp }
   endpath outpath = { o1 }
	
}