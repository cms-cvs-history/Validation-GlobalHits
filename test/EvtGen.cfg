process EVTGEN  = {

   ## setup useful services
   include "Validation/GlobalHits/test/data/Random.cfi"
   include "Validation/GlobalHits/test/data/MessageLogger.cfi"
   //include "FWCore/MessageLogger/data/MessageLogger.cfi"
   //include "Validation/GlobalHits/test/data/Timing.cfi"   
   //include "Validation/GlobalHits/test/data/Memory.cfi"      

   ## Step 1 : Event Generation
   ##
   include "SimGeneral/HepPDTESSource/data/pdt.cfi"
   //include "SimGeneral/HepPDTESSource/data/pythiapdt.cfi"
   ## choose one of the following
   //include "Validation/GlobalHits/test/data/FlatRandomEGunSource.cfi"
   include "IOMC/GeneratorInterface/data/PythiaSourceMinBias.cfi"	
   replace PythiaSource.maxEvents = 7000
   replace PythiaSource.pythiaHepMCVerbosity = false
   replace PythiaSource.pythiaPylistVerbosity = 0

   ## smearing of the vertex
   ##
   ##module VtxSmeared
   include "IOMC/EventVertexGenerators/data/VtxSmearedGauss.cfi" 
   ##include "IOMC/EventVertexGenerators/data/VtxSmearedFlat.cfi"

   ## Step 2 : Output module
   ##
   module o1 = PoolOutputModule 
   { 
      untracked string fileName = "MC_100p2_minbias.root"
   }

   ## Step 3: execute path
   ## Global producer needs DetSim, 
   ## can use smeared vertex, can't use mixing
   ##
   path p1 = { VtxSmeared }
   endpath outpath = { o1 }
	
}
