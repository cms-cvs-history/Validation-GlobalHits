process PROD =
{
   # Input File from OscarProducer
   source = PoolSource
   {
      untracked string fileName = "../../../SimG4Core/Application/test/evtgen_detsim_digi.root"
      untracked int32 maxEvents = 20
   }

   # Setup geometry
   es_source = XMLIdealGeometryESSource 
   { 
      FileInPath GeometryConfiguration = "Geometry/CMSCommonData/data/SimConfiguration.xml"
      #the proper root node is set in the xml file
      string rootNodeName = ""
   }
   es_module = TrackerGeometricDetESModule {}
   es_module = TrackerDigiGeometryESModule {}
   es_module = EcalBarrelGeometryEP {}
   es_module = EcalEndcapGeometryEP {}
   es_module = EcalPreshowerGeometryEP {}
   es_module = HcalHardcodeGeometryEP {}
   es_module = CaloTowerHardcodeGeometryEP {}
   es_module = CaloGeometryBuilder {}
   es_module = CSCGeometryESModule
   {
      bool useRadialStrips       = true
      bool useRealWireGeometry   = false
      bool useGangedStripsInME1a = true
      bool useOnlyWiresInME1a    = false
   }
   es_module = DTGeometryESModule {}
   es_module = RPCGeometryESModule {}

   # Setup producer
   module gvp = GlobalValProducer
   {
      untracked string Name = "GlobalValProducer"
      untracked int32 Verbosity = 3  # verbosity inclusive. 0 provides no output
                                     # 1 provides basic output
                                     # 2 provides output of the fill step
                                     # 3 provides output of the store step
      string Label = "GlobalStats"
      PSet ProvenanceLookup =
      {
         untracked bool GetAllProvenances = false
         untracked bool PrintProvenanceInfo = false
      }
   }

   # Setup output text
   service = MessageLogger
   {
       vstring destinations =
       {
          "MessageLogger.log",
          "cout"
       }
       PSet MessageLogger.log =
       {
          int32 lineLength = 132
          bool noLineBreaks = true
       }
       PSet cout =
       {
          int32 lineLength = 132
          bool noLineBreaks = true
       }
   }

   # setup timing and memory usage output
   service = Timing {}
   service = SimpleMemoryCheck
   {
      untracked int32 ignoreTotal = 1 # default is one
   }

   # Setup output module
   module o1 = PoolOutputModule 
   { 
      untracked string fileName = "GlobalValProducer.root" 
   }

   # execute
   path p1 = { gvp }
   endpath outpath = { o1 }

}